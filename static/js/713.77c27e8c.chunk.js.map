{"version":3,"file":"static/js/713.77c27e8c.chunk.js","mappings":"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","sources":["../node_modules/src/observe.ts","../node_modules/src/InView.tsx","webpack://tiktok/./src/components/VideoItem/VideoItem.module.scss?bf8a","components/VideoItem/Action/index.js","components/VideoItem/Header/index.js","webpack://tiktok/./src/components/VideoItem/Header/Header.module.scss?cda8","components/Share/index.js","webpack://tiktok/./src/components/Share/Share.module.scss?b570","components/VideoItem/Interactive/index.js","webpack://tiktok/./src/components/VideoItem/Interactive/Interactive.module.scss?42b0","components/VideoItem/index.js","services/videoServices.js","pages/Home/index.js","webpack://tiktok/./src/pages/Home/Home.module.scss?ce6f"],"sourcesContent":["import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"VideoItem_wrapper__SalTZ\",\"main\":\"VideoItem_main__Ou-lo\",\"place-video\":\"VideoItem_place-video__2aHot\",\"video\":\"VideoItem_video__Y9-WQ\",\"action\":\"VideoItem_action__Yd427\",\"play-or-pause\":\"VideoItem_play-or-pause__lRTuS\",\"volume\":\"VideoItem_volume__RQjU0\",\"volume-bar\":\"VideoItem_volume-bar__orlnG\",\"vol-icon\":\"VideoItem_vol-icon__Z7PqU\"};","import React from 'react'\r\nimport classNames from 'classnames/bind'\r\nimport styles from '../VideoItem.module.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPause, faPlay, faVolumeHigh, faVolumeXmark } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst cx = classNames.bind(styles)\r\nfunction Action({ isPlay, handlePlayOrPause, volume, handleChangeVol, handleVol }) {\r\n    return (\r\n        <div className={cx('action')}>\r\n            <button className={cx('play-or-pause')} onClick={handlePlayOrPause}>\r\n                {isPlay ? <FontAwesomeIcon icon={faPause} /> : <FontAwesomeIcon icon={faPlay} />}\r\n            </button>\r\n            <div className={cx('volume')}>\r\n                <div className={cx('volume-bar')}>\r\n                    <input type=\"range\" min=\"0\" max=\"100\" value={volume * 100} onChange={handleChangeVol} />\r\n                </div>\r\n                <button className={cx('vol-icon')} onClick={handleVol}>\r\n                    {volume > 0 ? (\r\n                        <FontAwesomeIcon icon={faVolumeHigh} />\r\n                    ) : (\r\n                        <FontAwesomeIcon icon={faVolumeXmark} />\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Action\r\n","import React, { useContext, useLayoutEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Tippy from '@tippyjs/react/headless';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\nimport Image from '~/components/Image'\r\nimport { faCircleCheck, faMusic } from '@fortawesome/free-solid-svg-icons'\r\nimport { Wrapper as PopperWrapper } from '~/components/Popper';\r\nimport Button from '~/layouts/Button'\r\nimport AccountPreview from '~/components/AccuontPreview'\r\nimport { Modal } from '~/Context/ModalContext'\r\nimport { Login } from '~/Context/LoginContext'\r\nimport Hashtag from '~/components/Hashtag'\r\n\r\nimport classNames from 'classnames/bind'\r\nimport styles from './Header.module.scss'\r\nconst cx = classNames.bind(styles)\r\nfunction Header({ user, music, desc }) {\r\n    const { show } = useContext(Modal);\r\n    const { isLogin } = useContext(Login);\r\n\r\n    const [content, setContent] = useState('');\r\n    const [listHashtag, setListHashTag] = useState([]);\r\n\r\n    // Handle Content\r\n    const handleContent = () => {\r\n        if (desc.includes('#')) {\r\n            setListHashTag(desc.split('#').slice(1));\r\n            setContent(desc.substring(0, desc.indexOf('#')));\r\n        } else setContent(desc);\r\n    };\r\n\r\n    useLayoutEffect(() => {\r\n        handleContent();\r\n    }, []);\r\n    // Handle Play Video\r\n    const renderPreview = (props) => {\r\n        return (\r\n            <div tabIndex=\"-1\" {...props}>\r\n                <PopperWrapper>\r\n                    <AccountPreview data={user} />\r\n                </PopperWrapper>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        <header className={cx('header')}>\r\n            <div className={cx('desc')}>\r\n                <Tippy\r\n                    interactive\r\n                    delay={[800, 0]}\r\n                    render={renderPreview}\r\n                    placement=\"bottom-start\"\r\n                    offset={[-18, -4]}\r\n                >\r\n                    <Image className={cx('avatar')} src={user.avatar} alt=\"\" size=\"54px\" />\r\n                </Tippy>\r\n                <div className={cx('content')}>\r\n                    <Link to=\"/\" className={cx('info')}>\r\n                        <strong className={cx('nickname')}>{user.nickname}</strong>\r\n                        {user.tick && <FontAwesomeIcon icon={faCircleCheck} className={cx('icon')} />}\r\n                        <p className={cx('name')}>{user.first_name + user.last_name}</p>\r\n                    </Link>\r\n                    <p className={cx('text')}>\r\n                        {content}\r\n                        {listHashtag.map((item, index) => (\r\n                            <Hashtag key={index} className={cx('hashtag')}>\r\n                                {item}\r\n                            </Hashtag>\r\n                        ))}\r\n                    </p>\r\n                    <Link to=\"/\" className={cx('music')}>\r\n                        <FontAwesomeIcon icon={faMusic} className={cx('icon-music')} />\r\n                        <p>{music}</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Button outline onClick={isLogin ? () => { } : show}>\r\n                    Follow\r\n                </Button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__yB3tm\",\"desc\":\"Header_desc__qrmPi\",\"avatar\":\"Header_avatar__LeiA+\",\"content\":\"Header_content__XKL5C\",\"info\":\"Header_info__d4a27\",\"nickname\":\"Header_nickname__D0yLw\",\"icon\":\"Header_icon__wNHnS\",\"name\":\"Header_name__Gy5p2\",\"text\":\"Header_text__L3NdS\",\"hashtag\":\"Header_hashtag__Rqf4a\",\"music\":\"Header_music__PE5FJ\",\"icon-music\":\"Header_icon-music__Vw0Aw\"};","import { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Share.module.scss';\r\nimport { useState } from 'react';\r\n\r\nconst cx = classNames.bind(styles);\r\nfunction Share({ data }) {\r\n    const [listData, setListData] = useState(data.slice(0, 4));\r\n    const [isMore, setIsMore] = useState(false);\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            {listData.map((item, index) => {\r\n                return (\r\n                    <Link key={index} className={cx('item')}>\r\n                        <div style={{ backgroundColor: item.bgc }} className={cx('icon')}>\r\n                            {item.icon}\r\n                        </div>\r\n                        <p className={cx('title')}>{item.title}</p>\r\n                    </Link>\r\n                );\r\n            })}\r\n            {isMore ? (\r\n                <button\r\n                    className={cx('btn')}\r\n                    onClick={() => {\r\n                        setIsMore(false);\r\n                        setListData(data.slice(0, 4));\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faChevronUp} />\r\n                </button>\r\n            ) : (\r\n                <button\r\n                    className={cx('btn')}\r\n                    onClick={() => {\r\n                        setIsMore(true);\r\n                        setListData(data);\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faChevronDown} />\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Share;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Share_wrapper__jtU6i\",\"item\":\"Share_item__qERxI\",\"icon\":\"Share_icon__VLEix\",\"title\":\"Share_title__PRrOA\",\"btn\":\"Share_btn__ccnmr\"};","import React from 'react'\r\nimport classNames from 'classnames/bind'\r\nimport styles from './Interactive.module.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCode, faCommentDots, faEnvelope, faHeart, faLink, faShare, faShareNodes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Tippy from '@tippyjs/react/headless';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\nimport { Wrapper as PopperWrapper } from '~/components/Popper';\r\nimport Share from '~/components/Share'\r\nimport { faFacebookF, faLinkedinIn, faTelegram, faTwitter, faWhatsapp } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst ListShare = [\r\n    {\r\n        icon: <FontAwesomeIcon icon={faCode} />,\r\n        title: 'Embed',\r\n        bgc: '#161823',\r\n    },\r\n    {\r\n        icon: <FontAwesomeIcon icon={faShareNodes} />,\r\n        title: 'Send to friends',\r\n        bgc: 'rgb(254, 44, 85)',\r\n    },\r\n    {\r\n        icon: <FontAwesomeIcon icon={faFacebookF} />,\r\n        title: 'Share to facebook',\r\n        bgc: '#20d5ec',\r\n    },\r\n    {\r\n        icon: <FontAwesomeIcon icon={faWhatsapp} />,\r\n        title: 'Share to whatsApp',\r\n        bgc: 'rgb(37, 211, 102)',\r\n    },\r\n    {\r\n        icon: <FontAwesomeIcon icon={faLink} />,\r\n        title: 'Copy link',\r\n        bgc: 'rgb(254, 44, 85)',\r\n    },\r\n    {\r\n        icon: <FontAwesomeIcon icon={faTwitter} />,\r\n        title: 'Share to twitter',\r\n        bgc: 'rgb(29, 161, 242)',\r\n    },\r\n    {\r\n        icon: <FontAwesomeIcon icon={faLinkedinIn} />,\r\n        title: 'Share to linked',\r\n        bgc: 'rgb(10, 102, 194)',\r\n    },\r\n    {\r\n        icon: <FontAwesomeIcon icon={faTelegram} />,\r\n        title: 'Share to Telegram',\r\n        bgc: 'rgb(29, 161, 242)',\r\n    },\r\n    {\r\n        icon: <FontAwesomeIcon icon={faEnvelope} />,\r\n        title: 'Share to whatsApp',\r\n        bgc: 'rgb(29, 161, 242)',\r\n    },\r\n];\r\nfunction Interactive({ likesCount, commentCount, sharesCount }) {\r\n\r\n\r\n\r\n    const renderShare = (props) => {\r\n        return (\r\n            <div tabIndex=\"-1\" {...props}>\r\n                <PopperWrapper>\r\n                    <Share data={ListShare} />\r\n                </PopperWrapper>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        <div className={cx('place-interactive')}>\r\n            <button className={cx('heart')}>\r\n                <FontAwesomeIcon icon={faHeart} />\r\n            </button>\r\n            <p className={cx('quantity')}>{likesCount}</p>\r\n            <button className={cx('comment')}>\r\n                <FontAwesomeIcon icon={faCommentDots} />\r\n            </button>\r\n            <p className={cx('quantity')}>{commentCount}</p>\r\n            <Tippy interactive render={renderShare} placement=\"top-start\" offset={[-20, 4]} delay={[0, 400]}>\r\n                <button className={cx('share')}>\r\n                    <FontAwesomeIcon icon={faShare} />\r\n                </button>\r\n            </Tippy>\r\n            <p className={cx('quantity')}>{sharesCount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Interactive\r\n","// extracted by mini-css-extract-plugin\nexport default {\"place-interactive\":\"Interactive_place-interactive__hQ-hO\",\"heart\":\"Interactive_heart__4YNUr\",\"comment\":\"Interactive_comment__rGj1K\",\"share\":\"Interactive_share__9GqZE\",\"quantity\":\"Interactive_quantity__ELb2Z\"};","import { InView } from 'react-intersection-observer';\r\nimport classNames from 'classnames/bind';\r\nimport { useState, useRef, useContext, useMemo, useEffect } from 'react';\r\n\r\nimport styles from './VideoItem.module.scss';\r\nimport { Vol } from '~/Context/VolContext';\r\nimport { Play } from '~/Context/PlayContext';\r\nimport Action from './Action';\r\nimport Header from './Header';\r\nimport Interactive from './Interactive';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\n\r\nfunction VideoItem({ data }) {\r\n    const { playVideo, setPlayVideo } = useContext(Play);\r\n    const { volume, setVolume } = useContext(Vol);\r\n    const videoRef = useRef(null);\r\n    const [isPlay, setIstPlay] = useState(false);\r\n    useMemo(() => {\r\n        if (playVideo && videoRef.current !== null) {\r\n            if (playVideo === data.id) {\r\n                videoRef.current.play();\r\n            } else {\r\n                setIstPlay(false);\r\n                videoRef.current.pause();\r\n                videoRef.current.currentTime = 0;\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [playVideo]);\r\n    const handlePlayOrPause = () => {\r\n        if (isPlay) {\r\n            videoRef.current.pause();\r\n        } else {\r\n            setPlayVideo(data.id);\r\n            videoRef.current.play();\r\n        }\r\n        return setIstPlay(!isPlay);\r\n    };\r\n    const handleChangeVol = (e) => {\r\n        const vol = e.target.value / 100;\r\n        setVolume(vol);\r\n    };\r\n    const handleVol = () => {\r\n        if (volume > 0) {\r\n            setVolume(0);\r\n            setVolume(1);\r\n        }\r\n    };\r\n\r\n    function handleIntersection(inView, entry) {\r\n        if (inView) {\r\n            videoRef.current.play();\r\n            setIstPlay(true)\r\n        } else {\r\n            videoRef.current.pause();\r\n            setIstPlay(false)\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <Header\r\n                user={data.user}\r\n                desc={data.description}\r\n                music={data.music}\r\n            />\r\n            <div className={cx('main')}>\r\n                <div className={cx('place-video')}>\r\n                    <InView onChange={handleIntersection} style={{ height: \"100%\" }}>\r\n\r\n                        <video\r\n                            onTimeUpdate={(e) => {\r\n                                e.target.volume = volume\r\n                            }}\r\n                            onClick={handlePlayOrPause}\r\n                            ref={videoRef}\r\n                            className={cx('video')}\r\n                            src={data.file_url}\r\n                            onEnded={(e) => {\r\n                                e.target.currentTime = 0;\r\n                                e.target.play();\r\n                            }}\r\n                        />\r\n                        <Action isPlay={isPlay}\r\n                            handleChangeVol={handleChangeVol}\r\n                            handlePlayOrPause={handlePlayOrPause}\r\n                            handleVol={handleVol}\r\n                            volume={volume}\r\n                        />\r\n                    </InView>\r\n                </div>\r\n                <Interactive\r\n                    likesCount={data.likes_count}\r\n                    commentCount={data.comments_count}\r\n                    shareCount={data.share_count}\r\n\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoItem;\r\n","import * as request from '~/untils/request';\r\n\r\nexport const VideoApi = async (page = 1, type = 'for-you') => {\r\n    try {\r\n        const res = await request.get('videos', {\r\n            params: {\r\n                page,\r\n                type,\r\n            },\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import classNames from 'classnames/bind';\r\nimport VideoItem from '~/components/VideoItem';\r\nimport styles from './Home.module.scss';\r\nimport { memo, useEffect, useRef, useState } from 'react';\r\nimport { VideoApi } from '~/services/videoServices';\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction HomePage() {\r\n    const [data, setData] = useState([]);\r\n    const [count, setCount] = useState(1);\r\n    const homeRef = useRef();\r\n    const getVideo = async (type = 'for-you') => {\r\n        window.removeEventListener('scroll', handleLoadVideo);\r\n        const data = await VideoApi(count, type);\r\n\r\n        setData((prev) => {\r\n            return [...prev, ...data];\r\n        });\r\n\r\n        window.addEventListener('scroll', handleLoadVideo);\r\n    };\r\n    useEffect(() => {\r\n        getVideo('for-you');\r\n        window.addEventListener('scroll', handleLoadVideo);\r\n\r\n        return window.removeEventListener('scroll', handleLoadVideo);\r\n    }, [count]);\r\n    const handleLoadVideo = () => {\r\n\r\n\r\n        let height = homeRef.current.scrollHeight || 1;\r\n        if (height > 0 && document.documentElement.scrollTop > height - 900) {\r\n            setCount(count + 1);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={cx('home')} ref={homeRef}>\r\n            {data.map((data, index) => {\r\n                return <VideoItem key={index} data={data} />;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(HomePage);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"Home_home__gGfTK\"};"],"names":["observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","createObserver","id","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","target","callback","Array","isArray","observe","element","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","isPlainChildren","props","children","InView","constructor","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","componentDidUpdate","prevProps","rootMargin","this","delay","componentWillUnmount","render","ref","as","React","cx","classNames","styles","isPlay","handlePlayOrPause","volume","handleChangeVol","handleVol","className","onClick","icon","faPause","faPlay","type","min","max","value","faVolumeHigh","faVolumeXmark","user","music","desc","show","useContext","Modal","isLogin","Login","useState","content","setContent","listHashtag","setListHashTag","useLayoutEffect","includes","split","slice","substring","interactive","tabIndex","Popper","data","placement","offset","Image","src","avatar","alt","to","nickname","tick","faCircleCheck","first_name","last_name","item","index","Hashtag","faMusic","Button","outline","listData","setListData","isMore","setIsMore","style","backgroundColor","bgc","title","faChevronUp","faChevronDown","ListShare","faCode","faShareNodes","faFacebookF","faWhatsapp","faLink","faTwitter","faLinkedinIn","faTelegram","faEnvelope","likesCount","commentCount","sharesCount","faHeart","faCommentDots","faShare","Play","playVideo","setPlayVideo","Vol","setVolume","videoRef","useRef","setIstPlay","useMemo","current","play","pause","currentTime","description","height","onTimeUpdate","e","file_url","onEnded","vol","likes_count","comments_count","shareCount","share_count","VideoApi","page","request","params","res","console","log","HomePage","setData","count","setCount","homeRef","getVideo","removeEventListener","handleLoadVideo","prev","addEventListener","useEffect","scrollHeight","document","documentElement","scrollTop","memo"],"sourceRoot":""}